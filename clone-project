#!/usr/bin/env bash
# new-project - clone a preexisting project and set it up
#
# new-project [name]

set -euo pipefail

#message to display when --help is used or the script gets invalid arguments
usage="$(basename "$0") [--help | <owner> <repo> [branch]]

owner\tOwner of the repository on GitHub
repo\tName of the repository
branch\tBranch of the repository to clone, by default it is master
"
showHelp=""

# Where is this script?
mydir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

#parse command line args

positionalArgs=()

while [[ $# -gt 0 ]]
do
key="$1"

case $key in
  --help)
  showHelp=1
  shift
  ;;
  *)
  positionalArgs+=("$1")
  shift
  ;;
esac
done

if [[ !(-z ${showHelp}) || !((${#positionalArgs[*]} > 1)) ]];
then echo -e "$usage" && exit 0
fi

owner="${positionalArgs[0]}"
repo="${positionalArgs[1]}"
branch="${positionalArgs[2]:-master}"

echo "cloning repository $owner/$repo:$branch"

git clone "git@github.com:$owner/$repo.git" --branch "$branch"

pushd "$mydir"

git submodule update --init --recursive

popd

python3 "$mydir/virtualenv/virtualenv.py" "$repo/venv"

cd "$repo"

set +u
source venv/bin/activate
set -u

pip install -r requirements.txt

deactivate
